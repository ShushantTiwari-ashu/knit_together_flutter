name: knit_together_flutter
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.0.1 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  go_router: ^9.0.0
  english_words: ^4.0.0
  flutter_lorem: ^2.0.0
  google_maps_flutter: ^2.2.0
  google_maps_flutter_web: ">=0.4.0 <0.6.0"
  provider: ^6.0.2
  uuid: ^3.0.4
  collection: ^1.17.1
  flextras: ^1.0.0
  retrofit: ^4.0.1
  floor: ^1.4.2
  flutter_bloc: ^8.1.3
  equatable: ^2.0.5
  particle_field: ^1.0.0
  rnd: ^0.2.0
  vector_math: ^2.1.4
  adaptive_navigation: ^0.0.3
  path_to_regexp: ^0.4.0
  quiver: ^3.1.0
  url_launcher: ^6.1.1
  url_strategy: ^0.2.0
  json_annotation: ^4.5.0

  built_collection: ^5.0.0
  built_value: ^8.3.0
  shrine_images: ^2.0.2
  file_selector: ^0.9.3
  http: ^1.0.0
  intl: ^0.18.0
  flutter_hooks: ^0.18.6
  hooks_riverpod: ^2.3.6
  auto_route: ^7.5.0
  dio: ^5.2.1+1
  awesome_dio_interceptor: ^1.0.0
  oktoast: ^3.3.1
  logging: ^1.1.1
  gap: ^3.0.0
  window_size:
    git:
      url: https://github.com/google/flutter-desktop-embedding.git
      path: plugins/window_size


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

  data:
    path: libraries/data
  core:
    path: libraries/core
  design_system:
    path: libraries/common/design_system
  utils:
    path: libraries/common/utils
  domain:
    path: libraries/domain
  feature:
    path: libraries/feature

dev_dependencies:
  async: ^2.11.0
  build: ^2.4.0
  build_runner: ^2.4.2
  built_value_generator:
  auto_route_generator: ^7.1.1
  retrofit_generator: ^7.0.6
  floor_generator: ^1.4.1
  injectable_generator:
  flutter_test:
    sdk: flutter
  grinder: ^0.9.4
  msix: ^3.11.1
  integration_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
assets:
  - assets/

fonts:
  - family: Corben
    fonts:
      - asset: fonts/Corben/Corben-Bold.ttf
        weight: 700

msix_config:
  display_name: Flutter Desktop Photo Search
  publisher_display_name: flutter.dev
  store: false # Set to true to deploy to Microsoft Store
  publisher: CN=01A6D5C0-D51A-4EEE-8DD0-F134DDD378F7
  identity_name: 16354flutter.dev.FlutterDesktopPhotoSearch
  msix_version: 1.0.0.1
  icons_background_color: "#ffffff"
  architecture: x64
  # See https://docs.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations
  capabilities: "internetClient"